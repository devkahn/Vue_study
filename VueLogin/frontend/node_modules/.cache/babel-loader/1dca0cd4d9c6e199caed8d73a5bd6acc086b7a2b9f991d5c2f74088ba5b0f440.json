{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  for: \"loginId\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, \"아이디\", -1 /* HOISTED */);\nconst _hoisted_6 = {\n  for: \"loginPw\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", null, \"패스워드\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"button\", null, \"로그인\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.state.account.mid ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"안녕하세요? \" + _toDisplayString($setup.state.account.memberName) + \"님!!\", 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"label\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"loginId\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.state.form.loginId = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginId]])]), _createElementVNode(\"label\", _hoisted_6, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"loginPw\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.state.form.loginPw = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.state.form.loginPw]])]), _hoisted_8]))]);\n}","map":{"version":3,"names":["class","for","_createElementVNode","_createElementBlock","_hoisted_1","$setup","state","account","mid","_hoisted_2","_toDisplayString","memberName","_hoisted_3","_hoisted_4","_hoisted_5","type","id","form","loginId","$event","_hoisted_6","_hoisted_7","loginPw","_hoisted_8"],"sources":["C:\\Users\\kahn\\Desktop\\VUE\\VueLogin\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"app\">\n    <div v-if=\"state.account.mid\">안녕하세요? {{state.account.memberName}}님!!</div>\n    <div v-else>\n      <label for=\"loginId\">\n        <span>아이디</span>\n        <input type=\"text\" id=\"loginId\" v-model=\"state.form.loginId\"/>\n      </label>\n      <label for=\"loginPw\">\n        <span>패스워드</span>\n        <input type=\"text\" id=\"loginPw\" v-model=\"state.form.loginPw\"/>\n      </label>\n      <button>로그인</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive } from 'vue';\nimport axios from \"axios\";\n\nexport default{\n  setup(){\n    const state = reactive({\n      account:{\n        mid:null,\n        memberName:\"\"\n      },\n      \n      form:{\n        loginId:\"\",\n        loginPw:\"\",\n      }\n    })\n\n    axios.get(\"/api/account\").then((res) =>{\n      console.log(res);\n      state.account = res.data;\n\n    })\n   \n\n    return {state}\n  }\n}\n</script>\n\n\n\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;;;;;;EAGLC,GAAG,EAAC;AAAS;gCAClBC,mBAAA,CAAgB,cAAV,KAAG;;EAGJD,GAAG,EAAC;AAAS;gCAClBC,mBAAA,CAAiB,cAAX,MAAI;gCAGZA,mBAAA,CAAoB,gBAAZ,KAAG;;;uBAXfC,mBAAA,CAaM,OAbNC,UAaM,GAZOC,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,I,cAA5BL,mBAAA,CAA0E,OAAAM,UAAA,EAA5C,SAAO,GAAAC,gBAAA,CAAEL,MAAA,CAAAC,KAAK,CAACC,OAAO,CAACI,UAAU,IAAE,KAAG,oB,cACpER,mBAAA,CAUM,OAAAS,UAAA,GATJV,mBAAA,CAGQ,SAHRW,UAGQ,GAFNC,UAAgB,E,gBAChBZ,mBAAA,CAA8D;IAAvDa,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,SAAS;+DAAUX,MAAA,CAAAC,KAAK,CAACW,IAAI,CAACC,OAAO,GAAAC,MAAA;iDAAlBd,MAAA,CAAAC,KAAK,CAACW,IAAI,CAACC,OAAO,E,KAE7DhB,mBAAA,CAGQ,SAHRkB,UAGQ,GAFNC,UAAiB,E,gBACjBnB,mBAAA,CAA8D;IAAvDa,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,SAAS;+DAAUX,MAAA,CAAAC,KAAK,CAACW,IAAI,CAACK,OAAO,GAAAH,MAAA;iDAAlBd,MAAA,CAAAC,KAAK,CAACW,IAAI,CAACK,OAAO,E,KAE7DC,UAAoB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}